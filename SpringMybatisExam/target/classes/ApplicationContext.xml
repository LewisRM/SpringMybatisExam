<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd">
	
	
	<context:annotation-config /> 
	 
	<context:component-scan base-package="org.lewis.SpringMybatisExam"></context:component-scan>
	
	<!-- 导入资源文件 -->
	<context:property-placeholder location="classpath:conf/jdbc.properties"/>
	
	<!-- 配置 C3P0 数据源 -->
	<bean id="dataSource"
		class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="user" value="${user}"></property>
		<property name="password" value="${password}"></property>
		<property name="jdbcUrl" value="${url}"></property>
		<property name="driverClass" value="${driverClass}"></property>
	</bean>
	
	<!-- 2. mybatis 的 SqlSession 的工厂: SqlSessionFactoryBean -->
		<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="configLocation" value="classpath:MybatisConf.xml" /> 
		<property name="typeAliasesPackage" value="org.lewis.SpringMybatisExam.Entity"/>
		</bean>
	
	<!-- 3. mybatis 自动扫描加载 Sql 映射文件 : MapperScannerConfigurer -->
		<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
			<property name="basePackage" value="org.lewis.SpringMybatisExam.Mapper"/>
			<property name="sqlSessionFactory" ref="sqlSessionFactory"/>
		</bean>
		
    <!-- 4. 事务管理 : DataSourceTransactionManager -->
		<bean  id="txManager"
				class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
		</bean>
		
	<!-- 5. 使用声明式事务 -->
		<tx:annotation-driven transaction-manager="txManager" />
	
</beans>